/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorCategorias;
import Controlador.ControladorProductos;
import Controlador.ControladorSubcategorias;
import Modelo.Categoria;
import Modelo.Producto;
import Modelo.SubCategoria;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos
 */
public class InternalVentanaProVen extends javax.swing.JInternalFrame {

    private DefaultTableModel categoriasPro;
    private DefaultTableModel subCategoriasPro;
    private DefaultTableModel modeloProductos;
    private ControladorProductos productos;
    private ControladorCategorias categoria;
    private ControladorSubcategorias subcategoria;
    private int idCategoria;
    private int idSubCategoria;
    private String tipoBusqueda = "jcomboCodigo Barras";
    
    /**
     * Creates new form InternalVentanaProAdmi
     */
    public InternalVentanaProVen() {
        productos = new ControladorProductos();
        categoria = new ControladorCategorias();
        subcategoria = new ControladorSubcategorias();
        categoriasPro = new DefaultTableModel();
        subCategoriasPro = new DefaultTableModel();
        modeloProductos = new DefaultTableModel();
        
        initComponents();
        cargarCategorias();
    }

    public void cargarCategorias(){
        
        ArrayList<Object> columna = new ArrayList<>();
        columna.add("ID");
        columna.add("Nombre de la Categoria");
        
        for (Object columna1 : columna) {
           categoriasPro.addColumn(columna1);
        }
        tablaCategorias.setModel(categoriasPro);
        ArrayList<Categoria> categorias = categoria.getCategorias();
        ArrayList<Object[]>  cat = new ArrayList<>();
        for (int i = 0; i < categorias.size(); i++) {
            Object[] categoria1 = new Object[]{categorias.get(i).getId(), categorias.get(i).getNombreCategoria()};
            cat.add(categoria1);
        }
        
        for (Object[] cat1 : cat) {
            categoriasPro.addRow(cat1);
        }
        this.tablaCategorias.setModel(categoriasPro);
        tablaCategorias.setBackground(new Color(0,102,204));
        tablaCategorias.setForeground(Color.WHITE);
        
        //Cargar las tablas para los datos de Subcategoria
        ArrayList<Object> columna2 = new ArrayList<>();
        columna2.add("ID");
        columna2.add("Nombre de la Subcategoria");
        
        for (Object columna1 : columna2) {
           subCategoriasPro.addColumn(columna1);
        }
        tablaSubCategoria.setModel(subCategoriasPro);
        
        //Cargar las tablas para los productos
        ArrayList<Object> columna3 = new ArrayList<>();
        columna3.add("Codigo de Barras");
        columna3.add("Nombre");
        columna3.add("Stock");
        columna3.add("Precio Unitario");
        columna3.add("Iva");
        columna3.add("pct.Descuento");
        columna3.add("Unidad de Compra");
        columna3.add("Unidad de Venta");
        
        for (Object columna1 : columna3) {
           modeloProductos.addColumn(columna1);
        }
        tablaProductos.setModel(modeloProductos);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        txtBuscarPor = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaSubCategoria = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Productos");
        setPreferredSize(new java.awt.Dimension(1200, 640));

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 102, 204));
        jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("PRODUCTOS");
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(jTextField2)
                .addGap(312, 312, 312))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Busqueda de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Buscar producto por:");

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 102, 204));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo Barras", "Nombre" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        txtBuscarPor.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtBuscarPor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscarPor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(txtBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(txtBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Categorias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12))); // NOI18N

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        tablaCategorias.setBackground(new java.awt.Color(0, 102, 204));
        tablaCategorias.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaCategorias.setForeground(new java.awt.Color(255, 255, 255));
        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCategorias.setToolTipText("");
        tablaCategorias.setRowHeight(25);
        tablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaCategorias);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "SubCategorias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12))); // NOI18N

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));

        tablaSubCategoria.setBackground(new java.awt.Color(0, 102, 204));
        tablaSubCategoria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaSubCategoria.setForeground(new java.awt.Color(255, 255, 255));
        tablaSubCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SubCategoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaSubCategoria.setToolTipText("");
        tablaSubCategoria.setRowHeight(25);
        tablaSubCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSubCategoriaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tablaSubCategoria);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/productos.png"))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12))); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tablaProductos.setBackground(new java.awt.Color(0, 102, 204));
        tablaProductos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaProductos.setForeground(new java.awt.Color(255, 255, 255));
        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo de Barras", "Nombre", "Stock", "Precio Unitario", "IVA", "% Descuento", "Unidad de Compra", "Unidad de Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.setToolTipText("");
        tablaProductos.setRowHeight(25);
        jScrollPane1.setViewportView(tablaProductos);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void tablaCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriasMouseClicked
        int seleccion = tablaCategorias.rowAtPoint(evt.getPoint());
        idCategoria = Integer.parseInt(String.valueOf(tablaCategorias.getValueAt(seleccion, 0)));
        String nombreCategoria = String.valueOf(tablaCategorias.getValueAt(seleccion, 1));
        eliminarRegistroTabla();
        cargarSubCategoria(idCategoria, nombreCategoria);
    }//GEN-LAST:event_tablaCategoriasMouseClicked
   
    private void cargarSubCategoria(int id, String nombreCategoria) {
        /*ArrayList<SubCategoria> subcategorias = categoria.getCategorias(id, nombreCategoria);
        ArrayList<Object[]>  subcat = new ArrayList<>();
        for (int i = 0; i < subcategorias.size(); i++) {
            Object[] categoria1 = new Object[]{subcategorias.get(i).getId(), subcategorias.get(i).getNombreSubCategoria()};
            subcat.add(categoria1);
        }
        
        for (Object[] cat1 : subcat) {
            subCategoriasPro.addRow(cat1);
        }*/
        this.tablaSubCategoria.setModel(subCategoriasPro);
    }
 
    private void tablaSubCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSubCategoriaMouseClicked
        int seleccion = tablaSubCategoria.rowAtPoint(evt.getPoint());
        idSubCategoria = Integer.parseInt(String.valueOf(tablaSubCategoria.getValueAt(seleccion, 0)));
        String nombreSubCategoria = String.valueOf(tablaSubCategoria.getValueAt(seleccion, 1));
        eliminarRegistroTablaProducto();
        cargarProductosSubCat(idSubCategoria, nombreSubCategoria);
    }//GEN-LAST:event_tablaSubCategoriaMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String seleccionado = jComboBox1.getSelectedItem().toString();
        
        if (seleccionado.equalsIgnoreCase("jcomboCodigo Barras")== true) {
            tipoBusqueda = "jcomboCodigo Barras";
        }
        
        if (seleccionado.equalsIgnoreCase("Nombre") == true) {
            tipoBusqueda = "jcomboNombre";
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (tipoBusqueda.equalsIgnoreCase("jcomboCodigo Barras")== true) {
            eliminarRegistroTablaProducto();
            Producto pro = productos.buscarProductoPorCodBarras(txtBuscarPor.getText().trim());
            if (pro != null) {
                ArrayList<Object[]>  prod = new ArrayList<>();
                Object[] producto = new Object[]{pro.getCodigoBarras(),pro.getNombre(), pro.getStock(),
                                            pro.getPrecioUnitario(), pro.getIva(), pro.getPctDescuento(),
                                            pro.getUnidadCompra(), pro.getUnidadVenta()};
                prod.add(producto);

                for (Object[] pro1 : prod) {
                    modeloProductos.addRow(pro1);
                }
                this.tablaProductos.setModel(modeloProductos);
            }else{
                JOptionPane.showMessageDialog(null, "El Producto no Existe", "INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        if (tipoBusqueda.equalsIgnoreCase("jcomboNombre") == true) {
            eliminarRegistroTablaProducto();
            Producto pro = productos.buscarProductoPorNombre(txtBuscarPor.getText().trim());
            if (pro != null) {
                ArrayList<Object[]>  prod = new ArrayList<>();
                Object[] producto = new Object[]{pro.getCodigoBarras(),pro.getNombre(), pro.getStock(),
                                            pro.getPrecioUnitario(), pro.getIva(), pro.getPctDescuento(),
                                            pro.getUnidadCompra(), pro.getUnidadVenta()};
                prod.add(producto);

                for (Object[] pro1 : prod) {
                    modeloProductos.addRow(pro1);
                }
                this.tablaProductos.setModel(modeloProductos);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cargarProductosSubCat(int id, String nombreSubCategoria) {
       /* ArrayList<Producto> listaProductos = null;
        Categoria cat = categoria.buscarCategoria(idCategoria);
        for (int i = 0; i < cat.getSubcategorias().size(); i++) {
            if (cat.getSubcategorias().get(i).getId() == id) {
                listaProductos = subcategoria.obtenerProductosSubCategoria(cat.getSubcategorias().get(i));
            } 
        }
        
        ArrayList<Object[]>  prod = new ArrayList<>();
        for (int i = 0; i < listaProductos.size(); i++) {
            Object[] pro = new Object[]{listaProductos.get(i).getCodigoBarras(),listaProductos.get(i).getNombre(), listaProductos.get(i).getStock(),
                                                listaProductos.get(i).getPrecioUnitario(), listaProductos.get(i).getIva(), listaProductos.get(i).getPctDescuento(),
                                                listaProductos.get(i).getUnidadCompra(), listaProductos.get(i).getUnidadVenta()};
            prod.add(pro);
        }
        
        for (Object[] pro1 : prod) {
            modeloProductos.addRow(pro1);
        }*/
        this.tablaProductos.setModel(modeloProductos);
    
    }
    
    public void eliminarRegistroTabla(){
        DefaultTableModel tb = (DefaultTableModel) tablaSubCategoria.getModel();
        int a = tablaSubCategoria.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
        eliminarRegistroTablaProducto();
    }
    
    public void eliminarRegistroTablaProducto(){
        DefaultTableModel tb = (DefaultTableModel) tablaProductos.getModel();
        int a = tablaProductos.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTable tablaSubCategoria;
    private javax.swing.JTextField txtBuscarPor;
    // End of variables declaration//GEN-END:variables


    
}
